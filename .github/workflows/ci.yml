name: CI

on:
  pull_request:
  push:
    branches:
      - main
      - refactor/*

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          python-version: '3.11'
      - name: Install shfmt
        run: |
          curl -sSLo /tmp/shfmt https://github.com/mvdan/sh/releases/download/v3.12.0/shfmt_v3.12.0_linux_amd64
          mkdir -p "$HOME/.local/bin"
          install -m 755 /tmp/shfmt "$HOME/.local/bin/shfmt"
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
      - name: Install yamlfmt
        run: |
          curl -sSLo /tmp/yamlfmt.tar.gz https://github.com/google/yamlfmt/releases/download/v0.20.0/yamlfmt_0.20.0_Linux_x86_64.tar.gz
          tar -xzf /tmp/yamlfmt.tar.gz -C /tmp
          mkdir -p "$HOME/.local/bin"
          if [ -f /tmp/yamlfmt ]; then
            install -m 755 /tmp/yamlfmt "$HOME/.local/bin/yamlfmt"
          else
            install -m 755 /tmp/yamlfmt_0.20.0_Linux_x86_64/yamlfmt "$HOME/.local/bin/yamlfmt"
          fi
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
      - name: Install taplo
        run: |
          curl -sSLo /tmp/taplo.gz https://github.com/tamasfe/taplo/releases/download/0.10.0/taplo-linux-x86_64.gz
          gzip -d /tmp/taplo.gz
          mkdir -p "$HOME/.local/bin"
          install -m 755 /tmp/taplo "$HOME/.local/bin/taplo"
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
      - name: Sync dependencies
        run: uv sync --extra dev --locked
      - name: Markdown formatting
        id: markdown
        run: uv run mdformat --check README.md
      - name: YAML formatting
        id: yaml
        run: yamlfmt -conf .yamlfmt.yml -lint .github/workflows
      - name: TOML formatting
        id: toml
        run: taplo fmt --config .taplo.toml --check pyproject.toml
      - name: Shell formatting
        id: shell
        run: shfmt -d scripts
      - name: Type check (mypy)
        id: mypy
        run: uv run mypy --config-file mypy.ini src/premiumflow tests
      - name: Python formatting (black)
        id: black
        run: uv run black --check src tests
      - name: Lint (ruff)
        id: ruff
        run: uv run ruff check src tests
      - name: Tests (pytest)
        id: pytest
        run: uv run pytest
