[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "premiumflow"
version = "0.1.0"
description = "Options premium cash flow analysis toolkit"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Garric Nahapetian", email = "garricn@users.noreply.github.com"}
]
keywords = ["options", "trading", "analysis", "roll-chains"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "click>=8.1.0",
    "pydantic>=2.0.0",
    "rich>=13.0.0",
    "yfinance>=0.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mdformat>=0.7.18",
    "mdformat-gfm>=0.3.5",
]

[project.scripts]
premiumflow = "premiumflow.cli:main"

[project.urls]
Homepage = "https://github.com/garricn/premiumflow"
Repository = "https://github.com/garricn/premiumflow"
Issues = "https://github.com/garricn/premiumflow/issues"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["premiumflow*"]

[tool.pytest.ini_options]
testpaths = ["."]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
]

[tool.black]
line-length = 100
target-version = ["py311", "py312"]
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py

[tool.mdformat]
wrap = 100
extensions = ["gfm"]
